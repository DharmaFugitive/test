<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.aowin.dao.IUserDao">
	<resultMap type="User" id="map1">
		<!-- 得到的数据  username,news(id,title,description,createtime) -->
		<result column="username" property="username"/>
		<!-- 一对多 一个user作者对应多个News里面的作品 
			property="news"   映射数据库列的字段或属性,是数据库的属性
		-->
		
 		<collection property="newsList" ofType="News">
			<id column="id" property="id"/>
			<result column="title" property="title"/>
			<result column="description" property="description"/>
			<result column="createtime" property="createtime"/>
		</collection>  
	</resultMap>

	<resultMap type="User" id="map2">
		<id column="id"  property="id" />
		<result column="account" property="account"/>
		<result column="password" property="password"/>
		<result column="username" property="username"/>
		<result column="auth" property="auth"/>
	</resultMap>
	
	<resultMap type="User" id="map3">
		<id column="id"  property="id" />
		<result column="account" property="account"/>
		<result column="password" property="password"/>
		<result column="username" property="username"/>
		<result column="auth" property="auth"/>
	</resultMap>
	
	
	
	
	<select id="getUserPage" parameterType="Page" resultMap="map1">
		select u.username,n.id,n.title,n.description,n.createtime
		from user u inner join news n 
		on u.id=n.author		
		limit #{begin},#{pageSize}
	</select>
	
	<select id="loginCheck" parameterType="User" resultMap="map2">
		select * from user where account=#{account} and password=#{password}
	</select> 
	
	<select id="getUser" parameterType="Page" resultMap="map3">
		select * from user limit #{begin},#{pageSize}
	</select>
	
	<select id="getUserNumber" resultType="int">
		select count(id) from user
	</select>
	
	<!--用户账号检查是否存在  --> 
	<select id="userAccountCheck" parameterType="String"  resultType="int" >
		select count(id) from user where account=#{account}
	</select>
	
	<!-- 新增用户 -->
	<insert id="addUser" useGeneratedKeys="true" keyProperty="id">
		insert into user(account,password,username,auth) values(#{account},#{password},#{username},#{auth})
	</insert>
	
	<!-- 删除用户 -->
	<delete id="deleteUser" parameterType="int"  >
		delete from user where id=#{id}
	</delete>
	
	<!-- 根据用户id获取用户信息 -->
	<select id="getUserById" parameterType="int">
		select * from user where id=#{id}
	</select>
	
	<!-- 根据模糊名字,获取id -->
	<select id="getIdByUsername" parameterType="String" resultType="int">
		select id from user where username like #{username}
	</select>
	
</mapper>